{"version":3,"sources":["components/education.tsx","components/pfs.tsx","components/experience.tsx","components/header.tsx","components/skills.tsx","components/theme-switcher.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["EducationSection","renderedEducation","education","map","edu","className","institute","degree","graduationDate","PfsSection","renderedPfs","pfs","bullets","bullet","ExperienceSection","renderedExperiences","experiences","experience","company","jobTitle","startDate","endDate","location","handleDownloadClick","e","preventDefault","window","print","Header","resumeInfo","links","link","name","href","onClick","url","target","reduce","prev","curr","email","renderSkill","skill","items","renderedSubskills","subskill","join","Theme","SkillsSection","renderedSkills","skills","item","matchesTheme","key","theme","toUpperCase","ThemeSwitcherMode","ThemeSwitcher","props","label","currentTheme","LIGHT","eventHandler","event","setThemeFn","DARK","toLowerCase","enabled","role","title","tabIndex","onKeyDown","THEME_SWITCHER_MODE","SWITCHABLE","App","React","useState","localStorage","getItem","setTheme","useEffect","setItem","matchMedia","matches","document","documentElement","setAttribute","DARK_ONLY","enableThemeSwitcher","ResumeData","info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.73be435d.chunk.js","sourcesContent":["import React from 'react';\nimport { Education } from './../models';\n\ninterface EducationProps {\n    education: Education[];\n};\n\nconst EducationSection = ({ education }: EducationProps) => {\n    const renderedEducation = education.map((edu: Education) =>\n        <li className=\"education-item\" key={edu.institute}>\n            <div className=\"summary\">\n                <div className=\"info\">\n                    <h3>{edu.institute}</h3>\n                    <div>{edu.degree}</div>\n                </div>\n                <div className=\"context\">\n                    <div className=\"when\">\n                        {edu.graduationDate}\n                    </div>\n                </div>\n            </div>\n        </li>\n    );\n\n    return (\n        <div className=\"education\">\n            <h2>Education</h2>\n            <ul className=\"education-list\">\n                {renderedEducation}\n            </ul>\n        </div>\n    );\n};\n\nexport default EducationSection;\n","import React from 'react';\nimport { Pfs } from './../models';\n\ninterface PfsProps {\n    pfs: Pfs[];\n};\n\nconst PfsSection = ({ pfs }: PfsProps) => {\n    const renderedPfs = pfs.map((pfs: Pfs) =>\n        <li className=\"experience-item\">\n            <ul className=\"details\">\n                {pfs.bullets.map((bullet) => {\n                    return <li key={bullet}>{bullet}</li>;\n                })}\n            </ul>\n        </li>\n    );\n\n    return (\n        <div className=\"experience\">\n            <h2>Professional Summary</h2>\n            <ul className=\"experience-list\">\n                {renderedPfs}\n            </ul>\n        </div>\n    );\n};\n\nexport default PfsSection;\n","import React from 'react';\nimport { Experience } from './../models';\n\ninterface ExperienceProps {\n    experiences: Experience[];\n};\n\nconst ExperienceSection = ({ experiences }: ExperienceProps) => {\n    const renderedExperiences = experiences.map((experience: Experience) =>\n        <li className=\"experience-item\" key={experience.company}>\n            <div className=\"summary\">\n                <div className=\"info\">\n                    <h3>{experience.company}</h3>\n                    <h4>{experience.jobTitle}</h4>\n                </div>\n                <div className=\"context\">\n                    <div className=\"when\">\n                        {experience.startDate} &mdash; {experience.endDate}\n                    </div>\n                    <div className=\"where\">\n                        {experience.location}\n                    </div>\n                </div>\n            </div>\n            <ul className=\"details\">\n                {experience.bullets.map((bullet) => {\n                    return <li key={bullet}>{bullet}</li>;\n                })}\n            </ul>\n        </li>\n    );\n\n    return (\n        <div className=\"experience\">\n            <h2>Experience</h2>\n            <ul className=\"experience-list\">\n                {renderedExperiences}\n            </ul>\n        </div>\n    );\n};\n\nexport default ExperienceSection;","import React from 'react';\nimport { ResumeInfo, SocialLink } from './../models';\n\nconst DOWNLOAD_KEYWORD = 'Download';\n\ninterface HeaderProps {\n    resumeInfo: ResumeInfo;\n};\n\nfunction handleDownloadClick(e: Event) {\n    e.preventDefault();\n    window.print();\n}\n\nconst Header = ({ resumeInfo }: HeaderProps) => {\n    const links = resumeInfo.links.map((link: SocialLink) =>\n        <span key={link.name}>\n            {(link.name) === DOWNLOAD_KEYWORD\n                /* intentionally using a href to simplify styling */\n                /* eslint-disable-next-line */\n                ? <a href=\"#\" onClick={handleDownloadClick}>Download</a>\n                : <a href={link.url} target='blank'>{link.name}</a>\n            }\n        </span>\n    ).reduce((prev, curr) => [prev, ' | ', curr]);\n\n    return (\n        <header>\n            <div className=\"name\">\n                <h1>{resumeInfo.name}</h1>\n            </div>\n            <div className=\"links\">\n                <div className=\"email\">\n                    <a href={'mailto:' + resumeInfo.email}>\n                        {resumeInfo.email}\n                    </a>\n                </div>\n                <div className=\"other\">\n                    {links}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { Skill } from './../models';\n\ninterface SkillProps {\n    skills: Skill[];\n};\n\nfunction hasSubskills(input: Skill | string): input is Skill {\n    if ((input as Skill).items) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction renderSkill(skill: Skill | string) {\n    if (hasSubskills(skill)) {\n        const renderedSubskills = skill.items.map(\n            (subskill) => renderSkill(subskill)).join(', ');\n        return skill.name + ` (${renderedSubskills})`;\n    } else {\n        return skill;\n    }\n}\n\nconst SkillsSection = ({ skills }: SkillProps) => {\n    const renderedSkills = skills.map((skill: Skill) =>\n        <div className=\"category\" key={skill.name}>\n            <div className=\"category-name\">\n                <h3>\n                    {skill.name}\n                </h3>\n            </div>\n            <div className=\"skills\">\n                {skill.items.map((item) => renderSkill(item)).join(', ')}\n            </div>\n        </div> \n    );\n\n    return (\n        <div className=\"skills\">\n            <h2>Skills</h2>\n            <div className=\"skills-list\">\n                {renderedSkills}\n            </div>\n        </div>\n    );\n};\n\nexport default SkillsSection;","import React from 'react';\n\nenum Theme {\n    LIGHT,\n    DARK\n}\n\ninterface ThemeSwitcherProps {\n    enabled: boolean,\n    currentTheme: string,\n    setThemeFn: Function;\n}\n\nfunction matchesTheme(key: string, theme: Theme): boolean {\n    return Theme[key.toUpperCase()] === theme;\n}\n\nfunction updateTheme(currentTheme: string, setThemeFn: Function): void {\n    if (matchesTheme(currentTheme, Theme.LIGHT)) {\n        setThemeFn(Theme[Theme.DARK].toLowerCase());\n    } else {\n        setThemeFn(Theme[Theme.LIGHT].toLowerCase());\n    }\n}\n\nconst ThemeSwitcher = (props: ThemeSwitcherProps) => {\n    const currentThemeLightMode = matchesTheme(props.currentTheme, Theme.LIGHT);\n    const label = currentThemeLightMode ? 'Dark Mode' : 'Light Mode';\n    const eventHandler = (event: Event) => {\n        event.preventDefault();\n        updateTheme(props.currentTheme, props.setThemeFn);\n    };\n\n    if (props.enabled) {\n        return (\n            <div\n                className='theme-switcher'\n                role='button' \n                title={label}\n                aria-label={label}\n                tabIndex='0'\n                onClick={eventHandler}\n                onKeyDown={(event: KeyboardEvent) => event.key === 'Enter' ? eventHandler(event) : ''}>\n                <span className='theme-switcher-text' aria-hidden='true'>\n                    <i className='material-icons'>\n                        {matchesTheme(props.currentTheme, Theme.LIGHT) ? 'dark_mode' : 'light_mode'}\n                    </i>\n                </span>\n            </div>\n        );\n    } else {\n        return '';\n    }\n}\n\nexport default ThemeSwitcher;","import React from 'react';\n\nimport EducationSection from './components/education';\nimport ProfessionalSummarySection from './components/pfs';\nimport ExperienceSection from './components/experience';\nimport Header from './components/header';\nimport SkillsSection from './components/skills';\nimport ThemeSwitcher from './components/theme-switcher';\nimport ResumeData from './data.json';\nimport './App.css';\n\n/** theme switcher settings */\nenum ThemeSwitcherMode {\n  SWITCHABLE, \n  LIGHT_ONLY, \n  DARK_ONLY \n}\n/* adjust this constant to change theme switcher behavior */\nconst THEME_SWITCHER_MODE: ThemeSwitcherMode = ThemeSwitcherMode.SWITCHABLE;\n\nfunction App() {\n  const [theme, setTheme] = React.useState(\n    localStorage.getItem('theme') || ''\n  );\n  React.useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // set theme to OS preference by default (if one exists)\n  if (theme === '') {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  }\n\n  if (THEME_SWITCHER_MODE === ThemeSwitcherMode.SWITCHABLE) {\n    document.documentElement.setAttribute('data-theme', theme);\n  } else if (THEME_SWITCHER_MODE === ThemeSwitcherMode.DARK_ONLY) {\n    document.documentElement.setAttribute('data-theme', 'dark');\n  }\n\n  const enableThemeSwitcher = THEME_SWITCHER_MODE === ThemeSwitcherMode.SWITCHABLE;\n  return (\n    <div className='App'>\n      <ThemeSwitcher enabled={enableThemeSwitcher} currentTheme={theme} setThemeFn={setTheme}/>\n      <div className=\"Resume\">\n        <Header resumeInfo={ResumeData.info} />\n        <main>\n          <ProfessionalSummarySection pfs={ResumeData.pfs} />\n          <ExperienceSection experiences={ResumeData.experience} />\n          <div className=\"sidebar\">\n            <SkillsSection skills={ResumeData.skills} />\n            <EducationSection education={ResumeData.education} />\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}